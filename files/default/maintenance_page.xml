<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.12.1">
  <actions/>
  <description></description>
  <displayName>Maintenance Page Deployment</displayName>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>environment</name>
          <description>Environment where you would like to affect the maintenance page.  Executing on PRODUCTION will TAKE THE SITE DOWN!  Please be careful.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>prod</string>
              <string>test</string>
              <string>dev</string>
              <string>e2e</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>maintenancePage</name>
          <description>Do you want the Maintenance Page on or off?</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>off</string>
              <string>on</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers/>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.36">
    <script>//Version 0.0.18
def deploy_statuspage(environment, component){
    sh &quot;&quot;&quot;
        curl https://api.statuspage.io/v1/pages/sbqftg5qjfyj/incidents.json \
        -H &quot;Authorization: OAuth 3038589b-ba47-4fbd-b310-ff883ec4076d&quot; \
        -X POST \
        -d &quot;incident[name]=JENKINS_AUTOMATION_${env.environment} Maintenance Page Deployed&quot; \
        -d &quot;incident[status]=identified&quot; \
        -d &quot;incident[wants_twitter_update]=f&quot; \
        -d &quot;incident[body]=JENKINS_AUTOMATION_${env.environment} We&apos;ve identified an issue with ${environment} and Jenkins has deployed the maintenance page.&quot; \
        -d &quot;incident[component_ids][]=${component}&quot; \
        -d &quot;incident[deliver_notifications]=true&quot;
    &quot;&quot;&quot;
}

def deploy_status(component, status){
    sh &quot;&quot;&quot;
      curl https://api.statuspage.io/v1/pages/sbqftg5qjfyj/components/${component}.json \
        -H &quot;Authorization: OAuth 3038589b-ba47-4fbd-b310-ff883ec4076d&quot; \
        -X PATCH \
        -d &quot;component[status]=${status}&quot; 
    &quot;&quot;&quot;
}

def resolve_statuspage(component, incident){
    sh &quot;&quot;&quot;
        curl https://api.statuspage.io/v1/pages/sbqftg5qjfyj/incidents/${incident}.json \
        -H &quot;Authorization: OAuth 3038589b-ba47-4fbd-b310-ff883ec4076d&quot; \
        -X PATCH \
        -d &quot;incident[status]=resolved&quot; \
        -d &quot;incident[wants_twitter_update]=f&quot; \
        -d &quot;incident[body]=Please open up a support ticket if any errors reappear.&quot; \
        -d &quot;incident[impact_override]=major&quot; \
        -d &quot;incident[component_ids][]=${component}&quot; \
        -d &quot;incident[deliver_notifications]=false&quot;
    &quot;&quot;&quot;
}

def loop_of_servers_on(servers, environment){
    servers.each { server -&gt;
        sh &quot;ssh jenkins@${server} \&quot;docker stop web-${environment} &amp;&amp; docker start maintenancePage\&quot;&quot;
    }
}

def loop_of_servers_off(servers, environment) {
    servers.each { server -&gt;
        sh &quot;ssh jenkins@${server} \&quot;docker stop maintenancePage &amp;&amp; docker start web-${environment}\&quot;&quot;
    }
}

def website_status(websites){
    websites.each { website -&gt;
            sh &quot;&quot;&quot;
                site_check=`curl -u trek:Tr3k2016! -sL --connect-timeout 20 --max-time 30 -w &quot;%{http_code}\\n&quot; ${website} -o /dev/null`; if [[ \$site_check == 200 ]]; then echo &quot;success \$site_check&quot;; else exit 1; fi
            &quot;&quot;&quot;
        }
}

node{
    if (env.environment == &quot;prod&quot;){
        servers = [&apos;azl-prd-web-01&apos;,&apos;azl-prd-web-02&apos;,&apos;azl-prd-web-03&apos;]
        website = [&quot;www.trekbikes.com&quot;]
        component = &quot;34p3jb2bzz44&quot;
    }
    if (env.environment == &apos;dev&apos;){
        servers = [&quot;azl-dev-web-01-az-rg-e2e-dvo1828-lin.eastus2.cloudapp.azure.com&quot;]
        website = [&quot;dev.trekbikes.com&quot;]
        component = &quot;lskyp6rd2gb0&quot;
    }
    if (env.environment == &apos;test&apos;){
        servers = [&apos;azl-tst-web-01&apos;,&apos;azl-tst-web-02&apos;,&apos;azl-tst-web-03&apos;]
        website = [&quot;https://www.testhyb.trekbikes.com&quot;]
        component = &quot;y9v9q643h989&quot;
    }
    if (env.environment == &apos;e2e&apos;){
        servers = [&quot;azl-e2e-web-01-az-rg-e2e-dvo1828-lin.eastus2.cloudapp.azure.com&quot;]
        website = [&quot;e2e.trekbikes.com&quot;]
        component = &quot;4pfms1110m71&quot;
    }

    stage(&apos;turning on/off maintenancePage&apos;){
        if (env.maintenancePage == &quot;on&quot;){
            slackSend channel: &apos;#alerts-devops_builds&apos;, color: &apos;#00FF00&apos;, message: &quot;TESTING turning ON maintenance for ${env.environment}&quot;, teamDomain: &apos;trekbikes&apos;, token: &apos;dVxfSjNzkVhjE9ZSgkRfPsmJ&apos;
            loop_of_servers_on(servers, env.environment)
        }
        if (env.maintenancePage == &quot;off&quot;){
            slackSend channel: &apos;#alerts-devops_builds&apos;, color: &apos;#00FF00&apos;, message: &quot;TESTING turning OFF maintenance for ${env.environment}&quot;, teamDomain: &apos;trekbikes&apos;, token: &apos;dVxfSjNzkVhjE9ZSgkRfPsmJ&apos;
            loop_of_servers_off(servers, env.environment)
        }
    }
    
    stage(&apos;deploying statuspage notification&apos;){
        // if we are turning on maintenancePage turn on the statuspage for that environment.
        if (env.maintenancePage == &quot;on&quot;){
            // send slack message letting us know we are adding this statuspage status for outage.
            slackSend channel: &apos;#alerts-devops_builds&apos;, color: &apos;#00FF00&apos;, message: &quot;Adding message to statuspage.io for ${env.environment} outage&quot;, teamDomain: &apos;trekbikes&apos;, token: &apos;dVxfSjNzkVhjE9ZSgkRfPsmJ&apos;
            // deploying statuspage for current environment and component associated.
            deploy_statuspage(env.environment, component)
            // updating component to major_outage since it will not be accesible with maintenance running. 
            deploy_status(component, &quot;major_outage&quot;)
        }
        // if we are turning off maintenancePage get the incident number and kill the statuspage incident
        else{
            // get incident number for our environment
            incNumber=sh (
                // script: &quot;curl https://api.statuspage.io/v1/pages/sbqftg5qjfyj/incidents.json?q=JENKINS_AUTOMATION_${environment} -H \&quot;Authorization: OAuth 3038589b-ba47-4fbd-b310-ff883ec4076d\&quot; | jq &apos;.[0].id&apos;&quot;,
                script: &quot;curl https://api.statuspage.io/v1/pages/sbqftg5qjfyj/incidents/unresolved.json -H \&quot;Authorization: OAuth 3038589b-ba47-4fbd-b310-ff883ec4076d\&quot; | jq &apos;.[-1].id&apos;&quot;,
                returnStdout: true
            ).trim()
            // Set our component back to where it should be. 
            deploy_status(component, &quot;operational&quot;)
            // let&apos;s close our incident. 
            resolve_statuspage(component, incNumber)
            // Send out a slack message notifying devopsbuild that statuspage incident has been resolved.
            slackSend channel: &apos;#alerts-devops_builds&apos;, color: &apos;#00FF00&apos;, message: &quot;Resolving statuspage.io for ${env.environment} outage&quot;, teamDomain: &apos;trekbikes&apos;, token: &apos;dVxfSjNzkVhjE9ZSgkRfPsmJ&apos;
        }
    }   
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>